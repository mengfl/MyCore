apply plugin: 'com.android.library'
apply plugin: 'maven'
android {
    compileSdkVersion 27
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }


    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }



}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:27.1.1'

    implementation 'com.android.support:design:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    api 'io.reactivex.rxjava2:rxjava:2.2.4'
    api 'io.reactivex.rxjava2:rxandroid:2.1.0'
    api 'com.squareup.retrofit2:retrofit:2.4.0'
    api 'com.squareup.retrofit2:converter-gson:2.4.0'
    api 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.11.0'
    api 'com.trello.rxlifecycle2:rxlifecycle:2.2.2'
    api 'com.trello.rxlifecycle2:rxlifecycle-android:2.2.2'
    api 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.2'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    api 'com.jakewharton.rxbinding2:rxbinding:2.1.1'

}
ext {
    GITHUB_REPO_PATH = "D/maven"
    PUBLISH_GROUP_ID = 'mfl.lib'
    PUBLISH_ARTIFACT_ID = 'aar'
    PUBLISH_VERSION = '1.0.0'
}

//////// 打包发布配置开始 ////////
apply plugin: 'maven'
ext {
    // 从Github上clone下来的项目的本地地址
    GITHUB_REPO_PATH = "D:/maven/MyCore"       //这里指定的就是刚刚新建项目后clone下来的在本地的路径
    PUBLISH_GROUP_ID = 'com.mfl'
    PUBLISH_ARTIFACT_ID = 'core'
    PUBLISH_VERSION = '1.0.0'
}
uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(project.GITHUB_REPO_PATH)
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
        }
    }
}

// 源代码一起打包
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}
artifacts {
    archives androidSourcesJar
}

//////// 打包发布配置结束 ////////


